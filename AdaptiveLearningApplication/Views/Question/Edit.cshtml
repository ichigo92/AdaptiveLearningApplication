@model AdaptiveLearningApplication.Models.QuestionPoolModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>QuestionPoolModel</legend>

        @Html.HiddenFor(model => model.QuestionID)

        <div class="editor-label">
            @Html.LabelFor(model => model.Question,new { @class = "control-label" })
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Question)
            @Html.ValidationMessageFor(model => model.Question ,"",new { @class = "alert-danger" })
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.QuestionOptionOne ,new { @class = "control-label" })
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.QuestionOptionOne)
            @Html.ValidationMessageFor(model => model.QuestionOptionOne ,"",new { @class = "alert-danger" })
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.QuestionOptionTwo ,new { @class = "control-label" })
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.QuestionOptionTwo)
            @Html.ValidationMessageFor(model => model.QuestionOptionTwo ,"",new { @class = "alert-danger" })
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.QuestionOptionThree ,new { @class = "control-label" })
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.QuestionOptionThree)
            @Html.ValidationMessageFor(model => model.QuestionOptionThree ,"",new { @class = "alert-danger" })
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.QuestionOptionFour ,new { @class = "control-label" })
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.QuestionOptionFour)
            @Html.ValidationMessageFor(model => model.QuestionOptionFour ,"",new { @class = "alert-danger" })
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Answer ,new { @class = "control-label" })
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Answer)
            @Html.ValidationMessageFor(model => model.Answer ,"",new { @class = "alert-danger" })
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Subject ,new { @class = "control-label" })
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Subject)
            @Html.ValidationMessageFor(model => model.Subject ,"",new { @class = "alert-danger" })
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Marks ,new { @class = "control-label" })
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Marks)
            @Html.ValidationMessageFor(model => model.Marks ,"",new { @class = "alert-danger" })
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DifficultyLevel ,new { @class = "control-label" })
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DifficultyLevel)
            @Html.ValidationMessageFor(model => model.DifficultyLevel ,"",new { @class = "alert-danger" })
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.QuizID, "Quiz" ,new { @class = "control-label" })
        </div>
        <div class="editor-field">
            @Html.DropDownList("QuizID", String.Empty)
            @Html.ValidationMessageFor(model => model.QuizID ,"",new { @class = "alert-danger" })
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
